
  model {
    # Priors
    # Priors for species-specific effects in occupancy and detection
    for(m in 1:M){  # per species
      # Params describe community
      # occupancy
      lpsi[m] ~ dnorm(mu.lpsi, tau.lpsi) # intercept
      for ( i in 1:novar.occ ) {         # covariate parameters
        betalpsi[m,i] ~ dnorm(mu.betalpsi[i], tau.betalpsi[i])
      }

      # detection
      lp[m] ~ dnorm(mu.lp, tau.lp)      # intercept
      for ( i in 1:novar.det ) {
        alphalp[m,i] ~ dnorm(mu.alphalp[i], tau.alphalp[i])
      }
    }
    
    # Hyperpriors
    # For the model of occupancy
    mu.lpsi ~ dnorm(0,0.01)       # intercept
    tau.lpsi <- pow(sd.lpsi, -2)   
    sd.lpsi ~ dunif(0,10) # as always, bounds of uniform chosen by trial and error
    for (i in 1:novar.occ) {  # covariate parameters
      mu.betalpsi[i] ~ dnorm(0,0.01)
      tau.betalpsi[i] <- pow(sd.betalpsi[i], -2)
      sd.betalpsi[i] ~ dunif(0, 10)

    # correlation component
    Tau[1:M, 1:M] ~ dwish(id[, ], df)

    
    # For the model of detection
    mu.lp ~ dnorm(0,0.01)        # intercept
    tau.lp <- pow(sd.lp, -2)
    sd.lp ~ dunif(0, 10)
    for ( i in 1:novar.det ) {  # covariate parameters
      mu.alphalp[i] ~ dnorm(0,0.01)
      tau.alphalp[i] <- pow(sd.alphalp[i], -2)
      sd.alphalp[i] ~ dunif(0,10)
    }
    
    # Ecological model for true occurrence (process model)
    
    for (n in 1:nsite) {  # for each site
      V[n, 1:M] ~ dmnorm(mu.occ[n, ], Tau[, ])
      for(m in 1:M){   # for each species
        #mu.occ[n,m] <- lpsi[m] + inprod(betalpsi[m,], hab[n] )  # no occ vars = 1 , jags annoyling converting mx to  vector
        mu.occ[n,m] <- lpsi[m] + inprod(betalpsi[m,], hab[n,] )  # no occ vars > 1
        #mu.occ[n,m] <- lpsi[m]                                  # no occ vars = 0
        z[n,m] ~ dbern(psi[n,m])
        psi[n,m] <- step(V[n,m] ) 
      }
    }
    
    # Observation model for replicated detection/nondetection observations
    for (n in 1:nsite){
      for(m in 1:M){  # per species
        for(r in 1:nrep){
          logit(p[n,r,m]) <- lp[m] + inprod(alphalp[m,], wind[n,r,] )
          y[n,r,m] ~ dbern(z[n,m] * p[n,r,m])
        }
      }
    }
    
    # Derived quantities
    for(m in 1:M){
      Nocc.fs[m] <- sum(z[,m]) # Number of occupied sites among the 267
    }
    for (n in 1:nsite){
     Nsite[n] <- sum(z[n,]) # Number of occurring species at each site
    }
    for ( m in 1:M) {
      for (n in 1:nsite) {
        Nfreq_obs[m,n] <- sum(y[n,,m])  # number obs per species at each site
      }
    } 
    index1 <- step(nz-1)  # step(nz-1) = 1 if nz > 0, 0 o/w - allows nz = 0
 }
    
